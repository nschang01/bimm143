---
title: "Class 16 Mini Project"
author: "Nicole Chang"
date: 2023-05-26
format: gfm
---

# Downstream analysis

Install tximport and rhdf5 in console with BiocManager

```{r}
# BiocManager::install("tximport")
# BiocManager::install("rhdf5")
library(tximport)
library(rhdf5)
```

Setup the folder and filenames to read

```{r}
folders <- dir(pattern="SRR21568*")
samples <- sub("_quant", "", folders)
files <- file.path( folders, "abundance.h5" )
names(files) <- samples

txi.kallisto <- tximport(files, type = "kallisto", txOut = TRUE)
```

```{r}
head(txi.kallisto$counts)
```

We now have our estimated transcript counts for each sample in R. We can see how many transcripts we have for each sample:

```{r}
colSums(txi.kallisto$counts)
```

And how many transcripts are detected in at least one sample:

```{r}
sum(rowSums(txi.kallisto$counts)>0)
```

Before subsequent analysis, we might want to filter out those annotated transcripts with no reads:

```{r}
to.keep <- rowSums(txi.kallisto$counts) > 0
kset.nonzero <- txi.kallisto$counts[to.keep,]
```

And those with no change over the samples:

```{r}
keep2 <- apply(kset.nonzero,1,sd)>0
x <- kset.nonzero[keep2,]
```

# **Principal Component Analysis**

We compute the principal components, centering and scaling each transcript\'s measured levels so that each feature contributes equally to the PCA:

```{r}
pca <- prcomp(t(x), scale=TRUE)
summary(pca)
```

We can use the first two principal components as a co-ordinate system for visualizing the summarized transcriptomic profiles of each sample:

```{r}
plot(pca$x[,1], pca$x[,2],
     col=c("blue","blue","red","red"),
     xlab="PC1", ylab="PC2", pch=16)
```

> Q. Use ggplot to make a similar figure of PC1 vs PC2 and a seperate figure PC1 vs PC3 and PC2 vs PC3.

```{r}
library(ggplot2)
library(ggrepel)
```

Make metadata object for the samples

```{r}
colData <- data.frame(condition = factor(rep(c("control", "treatment"), each = 2)))
rownames(colData) <- colnames(txi.kallisto$counts)
```

Make the data.frame for ggplot

```{r}
y <- as.data.frame(pca$x)
y$Condition <- as.factor(colData$condition)
```

Plot

```{r}
ggplot(y) +
  aes(PC1, PC2, col=Condition) +
  geom_point() +
  geom_text_repel(label=rownames(y)) +
  theme_bw()
```
